var l=Object.defineProperty;var h=(t,s,e)=>s in t?l(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var n=(t,s,e)=>(h(t,typeof s!="symbol"?s+"":s,e),e);import{Game as g}from"./htmf_wasm-555526e4.js";const d=2,v=0,r=8,M=7,f=8,u=M*(r/2)+f*(r/2),m=100,_=0,c=14e3,y=6e4;function P(t){const s=[];for(let o=0;o<u;++o)s.push(t.num_fish(o));const e=[],a=[],i=[];for(let o=0;o<d;++o)e.push(t.score(o)),a.push([...t.penguins(o)]),i.push([...t.claimed(o)]);return{activePlayer:t.active_player(),modeType:t.finished_drafting()?"playing":"drafting",scores:e,turn:t.turn(),board:{fish:s,penguins:a,claimed:i}}}function S(t,s){if(t.active_player()!==v)return[];if(t.finished_drafting()){if(s!==void 0)return[...t.possible_moves(s)];const e=t.active_player();return e===void 0?[]:[...t.penguins(e)]}else return[...t.draftable_cells()]}class k{constructor(s){n(this,"game");n(this,"postMessage");n(this,"ponderer");n(this,"nplayouts",0);this.game=g.new(),this.postMessage=s,this.ponder()}free(){this.stopPondering(),this.game.free()}init(){const s=this.postMessage;s({type:"initialized",gameState:this.getState(),possibleMoves:this.getPossibleMoves()})}ponder(){this.nplayouts=this.game.get_visits(),this.ponderer===void 0&&(this.ponderer=setInterval(()=>{if(this.nplayouts>=y){this.stopPondering();return}const s=performance.now();for(;performance.now()-s<m;)this.playout();const e=this.game.active_player();e!==void 0&&(this.game.is_drafting()?this.postPlaceScores(e):this.postMoveScores(e))},_))}stopPondering(){this.ponderer!==void 0&&(clearInterval(this.ponderer),this.ponderer=void 0)}placePenguin(s){this.game.place_penguin(s),this.ponder()}movePenguin(s,e){this.game.move_penguin(s,e),this.ponder()}playout(){this.game.playout(),++this.nplayouts}takeAction(){this.stopPondering();const s=this.postMessage,e=this.game.turn()<2?2*c:c;for(;this.nplayouts<e;)this.playout(),this.nplayouts%100===0&&s({type:"thinkingProgress",completed:this.nplayouts,required:e});this.game.take_action(),this.ponder()}getState(){return P(this.game)}getPossibleMoves(s){return S(this.game,s)}onMessage(s){switch(console.log(`received request ${s.type}`),s.type){case"get":this.postGameState();break;case"move":try{this.movePenguin(s.src,s.dst),this.postGameState()}catch{this.postIllegalMove(s.src,s.dst)}break;case"place":try{this.placePenguin(s.dst),this.postGameState()}catch{this.postIllegalPlacement(s.dst)}break;case"possibleMoves":this.postPossibleMoves(s.src);break;case"takeAction":this.takeAction(),this.postGameState();break}}postIllegalMove(s,e){const a=this.postMessage;a({type:"illegalMove",src:s,dst:e})}postIllegalPlacement(s){const e=this.postMessage;e({type:"illegalPlacement",dst:s})}postPossibleMoves(s){const e=this.postMessage;e({type:"possibleMoves",possibleMoves:this.getPossibleMoves(s)})}postGameState(){const s=this.postMessage;s({type:"state",gameState:this.getState()})}postPlaceScores(s){const e=[];for(const i of this.game.draftable_cells()){const o=this.game.place_info(i);e.push({dst:i,visits:o.get_visits(),rewards:o.get_rewards()})}const a=this.postMessage;a({type:"placeScores",activePlayer:s,placeScores:e})}postMoveScores(s){const e=[];for(const i of this.game.penguins(s))for(const o of this.game.possible_moves(i)){const p=this.game.move_info(i,o);e.push({src:i,dst:o,visits:p.get_visits(),rewards:p.get_rewards()})}const a=this.postMessage;a({type:"moveScores",activePlayer:s,moveScores:e})}}export{k as default};
//# sourceMappingURL=Bot-e5db3e99.js.map

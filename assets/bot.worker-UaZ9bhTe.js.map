{"version":3,"file":"bot.worker-UaZ9bhTe.js","sources":["../../pkg/htmf_wasm.js","../src/constants.ts","../src/Bot.ts","../src/bot.worker.ts"],"sourcesContent":["let wasm;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* This function only exists when you compile without multithreading support!\n*\n* This function does nothing; it's just a stub function to match\n* `wasm_bindgen_rayon::init_thread_pool`, which exists when you do compile with\n* multithreading support.\n* @param {number} _num_threads\n* @returns {Promise<any>}\n*/\nexport function initThreadPool(_num_threads) {\n    const ret = wasm.initThreadPool(_num_threads);\n    return takeObject(ret);\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nexport class Game {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Game.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_game_free(ptr);\n    }\n    /**\n    * @returns {Game}\n    */\n    static new() {\n        const ret = wasm.game_new();\n        return Game.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    is_drafting() {\n        const ret = wasm.game_is_drafting(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {boolean}\n    */\n    finished_drafting() {\n        const ret = wasm.game_finished_drafting(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {boolean}\n    */\n    game_over() {\n        const ret = wasm.game_game_over(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    active_player() {\n        const ret = wasm.game_active_player(this.__wbg_ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    * @param {number} player\n    * @returns {number}\n    */\n    score(player) {\n        const ret = wasm.game_score(this.__wbg_ptr, player);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    turn() {\n        const ret = wasm.game_turn(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} idx\n    * @returns {number}\n    */\n    num_fish(idx) {\n        const ret = wasm.game_num_fish(this.__wbg_ptr, idx);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} player\n    * @returns {Uint8Array}\n    */\n    penguins(player) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.game_penguins(retptr, this.__wbg_ptr, player);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} player\n    * @returns {Uint8Array}\n    */\n    claimed(player) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.game_claimed(retptr, this.__wbg_ptr, player);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    draftable_cells() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.game_draftable_cells(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} src\n    * @returns {Uint8Array}\n    */\n    possible_moves(src) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.game_possible_moves(retptr, this.__wbg_ptr, src);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} dst\n    */\n    place_penguin(dst) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.game_place_penguin(retptr, this.__wbg_ptr, dst);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {number} src\n    * @param {number} dst\n    */\n    move_penguin(src, dst) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.game_move_penguin(retptr, this.__wbg_ptr, src, dst);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    */\n    playout() {\n        wasm.game_playout(this.__wbg_ptr);\n    }\n    /**\n    * @param {number} n\n    */\n    playout_n_times(n) {\n        wasm.game_playout_n_times(this.__wbg_ptr, n);\n    }\n    /**\n    * @returns {number}\n    */\n    get_total_playouts() {\n        const ret = wasm.game_get_total_playouts(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    get_visits() {\n        const ret = wasm.game_get_visits(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    *\n    *     * Number of times we've tried and won by placing a penguin at `dst` on the current board\n    *\n    * @param {number} dst\n    * @returns {MoveInfo}\n    */\n    place_info(dst) {\n        const ret = wasm.game_place_info(this.__wbg_ptr, dst);\n        return MoveInfo.__wrap(ret);\n    }\n    /**\n    *\n    *     * Number of times we've tried and won by moving a penguin from `src` to `dst` on the current\n    *     * board\n    *\n    * @param {number} src\n    * @param {number} dst\n    * @returns {MoveInfo}\n    */\n    move_info(src, dst) {\n        const ret = wasm.game_move_info(this.__wbg_ptr, src, dst);\n        return MoveInfo.__wrap(ret);\n    }\n    /**\n    */\n    take_action() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.game_take_action(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    tree_size() {\n        const ret = wasm.game_tree_size(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class MoveInfo {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(MoveInfo.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_moveinfo_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get_visits() {\n        const ret = wasm.moveinfo_get_visits(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    get_rewards() {\n        const ret = wasm.moveinfo_get_rewards(this.__wbg_ptr);\n        return ret;\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_crypto_58f13aa23ffcb166 = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_process_5b786e71d465a513 = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_c2ab80650590b6a2 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_523d7bd03ef69fba = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_require_2784e593a4674877 = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_msCrypto_abcb1295e768d1f2 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_504510b5564925af = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_a0d98aa11c81fe89 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_newnoargs_ccdcae30fd002262 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_669127b9d730c650 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_3fad056edded10bd = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_a4f46c98a61d4089 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_17eff828815f7d84 = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_46f939f6541643c5 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_call_53fc3abd42e24ec8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_resolve_a3252b2860f0a09e = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_344d9b41efe96da7 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_2dc04d99088b15e3 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_d8a000788389a31e = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_dcfd613a3420f908 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_newwithlength_13b5319ab422dcf6 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_6ca5cfa7fbb9abbe = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n    imports.wbg.memory = maybe_memory || new WebAssembly.Memory({initial:18,maximum:16384,shared:true});\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('htmf_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","export const NPLAYERS = 2;\nexport const HUMAN_PLAYER = 0;\nexport const BOT_PLAYER = 1;\nexport const NUM_ROWS = 8;\nexport const EVEN_ROW_LEN = 7;\nexport const ODD_ROW_LEN = 8;\nexport const NUM_CELLS =\n  EVEN_ROW_LEN * (NUM_ROWS / 2) + ODD_ROW_LEN * (NUM_ROWS / 2);\n\nexport const PLAYOUT_CHUNK_SIZE = 200;\nexport const MIN_PLAYOUTS = 14_000;\nexport const MAX_PLAYOUTS = 60_000;\n","import * as wasm from \"htmf-wasm\";\n\nimport {\n  NPLAYERS,\n  NUM_CELLS,\n  MIN_PLAYOUTS,\n  MAX_PLAYOUTS,\n  HUMAN_PLAYER,\n  BOT_PLAYER,\n  PLAYOUT_CHUNK_SIZE,\n} from \"./constants\";\nimport {\n  type GameState,\n  type MoveScore,\n  type WorkerRequest,\n  type WorkerResponse,\n} from \"./WorkerProtocol\";\n\nfunction getGameState(game: wasm.Game): GameState {\n  const fish = [];\n  for (let idx = 0; idx < NUM_CELLS; ++idx) {\n    fish.push(game.num_fish(idx));\n  }\n  const scores: number[] = [];\n  const penguins = [];\n  const claimed = [];\n  for (let p = 0; p < NPLAYERS; ++p) {\n    scores.push(game.score(p));\n    penguins.push([...game.penguins(p)]);\n    claimed.push([...game.claimed(p)]);\n  }\n  return {\n    activePlayer: game.active_player(),\n    modeType: game.finished_drafting() ? \"playing\" : \"drafting\",\n    scores,\n    turn: game.turn(),\n    board: {\n      fish,\n      penguins,\n      claimed,\n    },\n  };\n}\n\nfunction getPossibleMoves(game: wasm.Game, src?: number): number[] {\n  if (game.active_player() !== HUMAN_PLAYER) {\n    return [];\n  }\n  if (game.finished_drafting()) {\n    if (src !== undefined) {\n      return [...game.possible_moves(src)];\n    }\n    const activePlayer = game.active_player();\n    return activePlayer === undefined ? [] : [...game.penguins(activePlayer)];\n  } else {\n    return [...game.draftable_cells()];\n  }\n}\n\nclass Bot {\n  wasmInternals: wasm.InitOutput;\n  game: wasm.Game = wasm.Game.new();\n  postMessage: (msg: WorkerResponse) => void;\n  ponderer?: number;\n  ponderStartTime?: number;\n  totalCompletedPonderTimeMs: number = 0;\n\n  constructor(\n    wasmInternals: wasm.InitOutput,\n    postMessage: (msg: WorkerResponse) => void,\n  ) {\n    this.wasmInternals = wasmInternals;\n    this.postMessage = postMessage;\n    this.ponder();\n    this.postGameState({});\n  }\n\n  free(): void {\n    this.stopPondering();\n    this.game.free();\n    this.totalCompletedPonderTimeMs = 0;\n  }\n\n  ponder(): void {\n    if (this.ponderer !== undefined) {\n      return;\n    }\n    this.ponderStartTime = performance.now();\n    this.ponderer = self.setInterval(() => {\n      const activePlayer = this.game.active_player();\n      if (\n        this.game.get_visits() >= MAX_PLAYOUTS ||\n        activePlayer === BOT_PLAYER\n      ) {\n        this.stopPondering();\n        return;\n      }\n\n      this.game.playout_n_times(PLAYOUT_CHUNK_SIZE);\n\n      if (activePlayer !== undefined) {\n        this.postThinkingProgress({\n          activePlayer,\n          playoutsNeeded: MAX_PLAYOUTS,\n        });\n      }\n    });\n  }\n\n  stopPondering(): void {\n    if (this.ponderer !== undefined) {\n      clearInterval(this.ponderer);\n      this.ponderer = undefined;\n    }\n    if (this.ponderStartTime !== undefined) {\n      this.totalCompletedPonderTimeMs +=\n        performance.now() - this.ponderStartTime;\n      this.ponderStartTime = undefined;\n    }\n  }\n\n  placePenguin(dst: number): void {\n    this.game.place_penguin(dst);\n    this.ponder();\n  }\n\n  movePenguin(src: number, dst: number): void {\n    this.game.move_penguin(src, dst);\n    this.ponder();\n  }\n\n  playout(): void {\n    this.game.playout();\n  }\n\n  takeAction(): void {\n    const playoutsNeeded =\n      this.game.turn() < 2 ? 2 * MIN_PLAYOUTS : MIN_PLAYOUTS;\n    let lastIntervalTime = performance.now();\n    while (this.game.get_visits() < playoutsNeeded) {\n      this.game.playout_n_times(PLAYOUT_CHUNK_SIZE);\n      this.totalCompletedPonderTimeMs += performance.now() - lastIntervalTime;\n      lastIntervalTime = performance.now();\n\n      const activePlayer = this.game.active_player();\n      if (activePlayer !== undefined) {\n        this.postThinkingProgress({ activePlayer, playoutsNeeded });\n      }\n    }\n    this.totalCompletedPonderTimeMs += performance.now() - lastIntervalTime;\n    lastIntervalTime = performance.now();\n\n    this.game.take_action();\n    this.postGameState({});\n    this.ponder();\n  }\n\n  getState(): GameState {\n    return getGameState(this.game);\n  }\n\n  getPossibleMoves(src?: number): number[] {\n    return getPossibleMoves(this.game, src);\n  }\n\n  onMessage(request: WorkerRequest): void {\n    console.log(`received request ${request.type}`);\n    let src;\n    let lastMoveWasIllegal = false;\n    switch (request.type) {\n      case \"getGameState\":\n        break;\n      case \"movePenguin\":\n        try {\n          if (request.src === undefined) {\n            this.placePenguin(request.dst);\n          } else {\n            this.movePenguin(request.src, request.dst);\n          }\n        } catch (err) {\n          lastMoveWasIllegal = true;\n        }\n        break;\n      case \"getPossibleMoves\":\n        src = request.src;\n        break;\n    }\n    this.postGameState({ src, lastMoveWasIllegal });\n    while (this.game.active_player() === BOT_PLAYER) {\n      this.takeAction();\n    }\n  }\n\n  postGameState({\n    src,\n    lastMoveWasIllegal,\n  }: {\n    src?: number;\n    lastMoveWasIllegal?: boolean;\n  }): void {\n    lastMoveWasIllegal = lastMoveWasIllegal === true;\n    const postMessage = this.postMessage;\n    postMessage({\n      type: \"gameState\",\n      gameState: this.getState(),\n      possibleMoves: this.getPossibleMoves(src),\n      lastMoveWasIllegal,\n    });\n  }\n\n  postThinkingProgress({\n    activePlayer,\n    playoutsNeeded,\n  }: {\n    activePlayer: number;\n    playoutsNeeded: number;\n  }): void {\n    const postMessage = this.postMessage;\n    postMessage({\n      type: \"thinkingProgress\",\n      completed: this.game.get_visits(),\n      required: playoutsNeeded,\n      totalPlayouts: this.game.get_total_playouts(),\n      totalTimeThinkingMs: this.getTotalTimeThinkingMs(),\n      memoryUsage: this.wasmInternals.memory.buffer.byteLength,\n      treeSize: this.game.tree_size(),\n      playerMoveScores: {\n        player: activePlayer,\n        moveScores: this.getMoveScores(activePlayer),\n      },\n    });\n  }\n\n  getMoveScores(activePlayer: number): MoveScore[] {\n    const moveScores: MoveScore[] = [];\n    if (this.game.is_drafting()) {\n      for (const dst of this.game.draftable_cells()) {\n        const info = this.game.place_info(dst);\n        moveScores.push({\n          dst,\n          visits: info.get_visits(),\n          rewards: info.get_rewards(),\n        });\n      }\n    } else {\n      for (const src of this.game.penguins(activePlayer)) {\n        for (const dst of this.game.possible_moves(src)) {\n          const info = this.game.move_info(src, dst);\n          moveScores.push({\n            src,\n            dst,\n            visits: info.get_visits(),\n            rewards: info.get_rewards(),\n          });\n        }\n      }\n    }\n    return moveScores;\n  }\n\n  getTotalTimeThinkingMs(): number {\n    let totalTimeThinkingMs = this.totalCompletedPonderTimeMs;\n    if (this.ponderStartTime !== undefined) {\n      totalTimeThinkingMs += performance.now() - this.ponderStartTime;\n    }\n    return totalTimeThinkingMs;\n  }\n}\n\nexport default Bot;\n","import Bot from \"./Bot\";\nimport htmfWasmInit, * as htmfWasm from \"htmf-wasm\";\nimport type { WorkerRequest } from \"./WorkerProtocol\";\n\n// Run WebAssembly.instantiateStreaming() to load and initialize the WebAssembly module\nconst memory = new WebAssembly.Memory({\n  initial: 18,\n  maximum: 16384,\n  shared: true,\n});\nconst wasmInternals = await htmfWasmInit(undefined, memory);\n\n// Initialize a pool with one WebWorker per available core\nawait htmfWasm.initThreadPool(navigator.hardwareConcurrency);\n\nconst bot = new Bot(wasmInternals, postMessage);\nonmessage = (event: MessageEvent<WorkerRequest>) => {\n  bot.onMessage(event.data);\n};\n\nexport {};\n"],"names":["wasm","cachedTextDecoder","cachedUint8Memory0","getUint8Memory0","getStringFromWasm0","ptr","len","heap","heap_next","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","initThreadPool","_num_threads","cachedInt32Memory0","getInt32Memory0","getArrayU8FromWasm0","WASM_VECTOR_LEN","cachedTextEncoder","encodeString","arg","view","buf","passStringToWasm0","malloc","realloc","mem","offset","code","handleError","f","args","e","Game","player","retptr","r0","r1","v1","src","dst","n","MoveInfo","__wbg_load","module","imports","bytes","instance","__wbg_get_imports","arg0","arg1","ptr1","len1","deferred0_0","deferred0_1","val","arg2","__wbg_init_memory","maybe_memory","__wbg_finalize_init","__wbg_init","input","NPLAYERS","HUMAN_PLAYER","BOT_PLAYER","NUM_ROWS","EVEN_ROW_LEN","ODD_ROW_LEN","NUM_CELLS","PLAYOUT_CHUNK_SIZE","MIN_PLAYOUTS","MAX_PLAYOUTS","getGameState","game","fish","scores","penguins","claimed","p","getPossibleMoves","activePlayer","Bot","wasm.Game","wasmInternals","postMessage","playoutsNeeded","lastIntervalTime","request","lastMoveWasIllegal","moveScores","info","totalTimeThinkingMs","memory","htmfWasmInit","htmfWasm.initThreadPool","bot","event"],"mappings":"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"}
{"version":3,"file":"Bot-4c7448cb.js","sources":["../src/constants.ts","../src/Bot.ts"],"sourcesContent":["const NPLAYERS = 2\nconst HUMAN_PLAYER = 0\nconst BOT_PLAYER = 1\nconst NUM_ROWS = 8\nconst EVEN_ROW_LEN = 7\nconst ODD_ROW_LEN = 8\nconst NUM_CELLS = EVEN_ROW_LEN * (NUM_ROWS / 2) + ODD_ROW_LEN * (NUM_ROWS / 2)\n\nconst PLAYOUT_MS = 100\nconst PONDER_INTERVAL_MS = 0\nconst MIN_PLAYOUTS = 14_000\nconst MAX_PLAYOUTS = 60_000\n\nexport {\n  NPLAYERS,\n  HUMAN_PLAYER,\n  BOT_PLAYER,\n  NUM_ROWS,\n  EVEN_ROW_LEN,\n  ODD_ROW_LEN,\n  NUM_CELLS,\n  PLAYOUT_MS,\n  MIN_PLAYOUTS,\n  MAX_PLAYOUTS,\n  PONDER_INTERVAL_MS\n}\n","import * as wasm from 'htmf-wasm'\n\nimport { NPLAYERS, NUM_CELLS, PLAYOUT_MS, PONDER_INTERVAL_MS, MIN_PLAYOUTS, MAX_PLAYOUTS, HUMAN_PLAYER } from './constants'\nimport type GameState from './GameState'\nimport { type WorkerRequest, type WorkerResponse } from './WorkerProtocol'\n\nfunction getGameState (game: wasm.Game): GameState {\n  const fish = []\n  for (let idx = 0; idx < NUM_CELLS; ++idx) {\n    fish.push(game.num_fish(idx))\n  }\n  const scores: number[] = []\n  const penguins = []\n  const claimed = []\n  for (let p = 0; p < NPLAYERS; ++p) {\n    scores.push(game.score(p))\n    penguins.push([...game.penguins(p)])\n    claimed.push([...game.claimed(p)])\n  }\n  return {\n    activePlayer: game.active_player(),\n    modeType: game.finished_drafting() ? 'playing' : 'drafting',\n    scores,\n    turn: game.turn(),\n    board: {\n      fish,\n      penguins,\n      claimed\n    }\n  }\n}\n\nfunction getPossibleMoves (game: wasm.Game, src?: number): number[] {\n  if (game.active_player() !== HUMAN_PLAYER) {\n    return []\n  }\n  if (game.finished_drafting()) {\n    if (src !== undefined) {\n      return [...game.possible_moves(src)]\n    }\n    const activePlayer = game.active_player()\n    return activePlayer === undefined ? [] : [...game.penguins(activePlayer)]\n  } else {\n    return [...game.draftable_cells()]\n  }\n}\n\nclass Bot {\n  game: wasm.Game\n  postMessage: (msg: WorkerResponse) => void\n  ponderer?: number\n  nplayouts = 0\n\n  constructor (postMessage: (msg: WorkerResponse) => void) {\n    this.game = wasm.Game.new()\n    this.postMessage = postMessage\n    this.ponder()\n  }\n\n  free (): void {\n    this.stopPondering()\n    this.game.free()\n  }\n\n  init (): void {\n    const postMessage = this.postMessage\n    postMessage({\n      type: 'initialized',\n      gameState: this.getState(),\n      possibleMoves: this.getPossibleMoves()\n    })\n  }\n\n  ponder (): void {\n    this.nplayouts = this.game.get_visits()\n\n    if (this.ponderer !== undefined) {\n      return\n    }\n    this.ponderer = setInterval(\n      () => {\n        if (this.nplayouts >= MAX_PLAYOUTS) {\n          this.stopPondering()\n          return\n        }\n        const t0 = performance.now()\n        while (performance.now() - t0 < PLAYOUT_MS) {\n          this.playout()\n        }\n\n        const activePlayer = this.game.active_player()\n        if (activePlayer !== undefined) {\n          if (this.game.is_drafting()) {\n            this.postPlaceScores(activePlayer)\n          } else {\n            this.postMoveScores(activePlayer)\n          }\n        }\n      },\n      PONDER_INTERVAL_MS\n    )\n  }\n\n  stopPondering (): void {\n    if (this.ponderer !== undefined) {\n      clearInterval(this.ponderer)\n      this.ponderer = undefined\n    }\n  }\n\n  placePenguin (dst: number): void {\n    this.game.place_penguin(dst)\n    this.ponder()\n  }\n\n  movePenguin (src: number, dst: number): void {\n    this.game.move_penguin(src, dst)\n    this.ponder()\n  }\n\n  playout (): void {\n    this.game.playout()\n    ++this.nplayouts\n  }\n\n  takeAction (): void {\n    this.stopPondering()\n    const postMessage = this.postMessage\n    const minPlayouts = this.game.turn() < 2 ? 2 * MIN_PLAYOUTS : MIN_PLAYOUTS\n    while (this.nplayouts < minPlayouts) {\n      this.playout()\n      if (this.nplayouts % 100 === 0) {\n        postMessage({\n          type: 'thinkingProgress',\n          completed: this.nplayouts,\n          required: minPlayouts\n        })\n      }\n    }\n    this.game.take_action()\n    this.ponder()\n  }\n\n  getState (): GameState {\n    return getGameState(this.game)\n  }\n\n  getPossibleMoves (src?: number): number[] {\n    return getPossibleMoves(this.game, src)\n  }\n\n  onMessage (request: WorkerRequest): void {\n    console.log(`received request ${request.type}`)\n    switch (request.type) {\n      case 'get':\n        this.postGameState()\n        break\n      case 'move':\n        try {\n          this.movePenguin(request.src, request.dst)\n          this.postGameState()\n        } catch (err) {\n          this.postIllegalMove(request.src, request.dst)\n        }\n        break\n      case 'place':\n        try {\n          this.placePenguin(request.dst)\n          this.postGameState()\n        } catch (err) {\n          this.postIllegalPlacement(request.dst)\n        }\n        break\n      case 'possibleMoves':\n        this.postPossibleMoves(request.src)\n        break\n      case 'takeAction':\n        this.takeAction()\n        this.postGameState()\n        break\n    }\n  }\n\n  postIllegalMove (src: number, dst: number): void {\n    const postMessage = this.postMessage\n    postMessage({\n      type: 'illegalMove',\n      src,\n      dst\n    })\n  }\n\n  postIllegalPlacement (dst: number): void {\n    const postMessage = this.postMessage\n    postMessage({\n      type: 'illegalPlacement',\n      dst\n    })\n  }\n\n  postPossibleMoves (src?: number): void {\n    const postMessage = this.postMessage\n    postMessage({\n      type: 'possibleMoves',\n      possibleMoves: this.getPossibleMoves(src)\n    })\n  }\n\n  postGameState (): void {\n    const postMessage = this.postMessage\n    postMessage({\n      type: 'state',\n      gameState: this.getState()\n    })\n  }\n\n  postPlaceScores (activePlayer: number): void {\n    const placeScores = []\n    for (const dst of this.game.draftable_cells()) {\n      const info = this.game.place_info(dst)\n      placeScores.push({\n        dst,\n        visits: info.get_visits(),\n        rewards: info.get_rewards()\n      })\n    }\n    const postMessage = this.postMessage\n    postMessage({\n      type: 'placeScores',\n      activePlayer,\n      placeScores\n    })\n  }\n\n  postMoveScores (activePlayer: number): void {\n    const moveScores = []\n    for (const src of this.game.penguins(activePlayer)) {\n      for (const dst of this.game.possible_moves(src)) {\n        const info = this.game.move_info(src, dst)\n        moveScores.push({\n          src,\n          dst,\n          visits: info.get_visits(),\n          rewards: info.get_rewards()\n        })\n      }\n    }\n    const postMessage = this.postMessage\n    postMessage({\n      type: 'moveScores',\n      activePlayer,\n      moveScores\n    })\n  }\n}\n\nexport default Bot\n"],"names":["NPLAYERS","HUMAN_PLAYER","NUM_ROWS","EVEN_ROW_LEN","ODD_ROW_LEN","NUM_CELLS","PLAYOUT_MS","PONDER_INTERVAL_MS","MIN_PLAYOUTS","MAX_PLAYOUTS","getGameState","game","fish","idx","scores","penguins","claimed","p","getPossibleMoves","src","activePlayer","Bot","postMessage","__publicField","wasm.Game","t0","dst","minPlayouts","request","placeScores","info","moveScores"],"mappings":"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"}